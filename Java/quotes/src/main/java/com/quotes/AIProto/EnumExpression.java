// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/enum_expression.proto

package AIProto;

public final class EnumExpression {
  private EnumExpression() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Penalty kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Penalty}
   */
  public enum Penalty
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PENALTY_L2 = 0;</code>
     */
    PENALTY_L2(0),
    /**
     * <code>PENALTY_L1 = 1;</code>
     */
    PENALTY_L1(1),
    /**
     * <code>PENALTY_ELASTICNET = 2;</code>
     */
    PENALTY_ELASTICNET(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PENALTY_L2 = 0;</code>
     */
    public static final int PENALTY_L2_VALUE = 0;
    /**
     * <code>PENALTY_L1 = 1;</code>
     */
    public static final int PENALTY_L1_VALUE = 1;
    /**
     * <code>PENALTY_ELASTICNET = 2;</code>
     */
    public static final int PENALTY_ELASTICNET_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Penalty valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Penalty forNumber(int value) {
      switch (value) {
        case 0: return PENALTY_L2;
        case 1: return PENALTY_L1;
        case 2: return PENALTY_ELASTICNET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Penalty>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Penalty> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Penalty>() {
            public Penalty findValueByNumber(int number) {
              return Penalty.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(0);
    }

    private static final Penalty[] VALUES = values();

    public static Penalty valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Penalty(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Penalty)
  }

  /**
   * <pre>
   * Loss kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Loss}
   */
  public enum Loss
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOSS_HINGE = 0;</code>
     */
    LOSS_HINGE(0),
    /**
     * <code>LOSS_LOG_LOSS = 1;</code>
     */
    LOSS_LOG_LOSS(1),
    /**
     * <code>LOSS_LOG = 2;</code>
     */
    LOSS_LOG(2),
    /**
     * <code>LOSS_MODIFIED_HUBER = 3;</code>
     */
    LOSS_MODIFIED_HUBER(3),
    /**
     * <code>LOSS_SQUARED_HINGE = 4;</code>
     */
    LOSS_SQUARED_HINGE(4),
    /**
     * <code>LOSS_PERCEPTRON = 5;</code>
     */
    LOSS_PERCEPTRON(5),
    /**
     * <code>LOSS_SQUARED_ERROR = 6;</code>
     */
    LOSS_SQUARED_ERROR(6),
    /**
     * <code>LOSS_HUBER = 7;</code>
     */
    LOSS_HUBER(7),
    /**
     * <code>LOSS_EPSILON_INSENSITIVE = 8;</code>
     */
    LOSS_EPSILON_INSENSITIVE(8),
    /**
     * <code>LOSS_SQUARED_EPSILON_INSENSITIVE = 9;</code>
     */
    LOSS_SQUARED_EPSILON_INSENSITIVE(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LOSS_HINGE = 0;</code>
     */
    public static final int LOSS_HINGE_VALUE = 0;
    /**
     * <code>LOSS_LOG_LOSS = 1;</code>
     */
    public static final int LOSS_LOG_LOSS_VALUE = 1;
    /**
     * <code>LOSS_LOG = 2;</code>
     */
    public static final int LOSS_LOG_VALUE = 2;
    /**
     * <code>LOSS_MODIFIED_HUBER = 3;</code>
     */
    public static final int LOSS_MODIFIED_HUBER_VALUE = 3;
    /**
     * <code>LOSS_SQUARED_HINGE = 4;</code>
     */
    public static final int LOSS_SQUARED_HINGE_VALUE = 4;
    /**
     * <code>LOSS_PERCEPTRON = 5;</code>
     */
    public static final int LOSS_PERCEPTRON_VALUE = 5;
    /**
     * <code>LOSS_SQUARED_ERROR = 6;</code>
     */
    public static final int LOSS_SQUARED_ERROR_VALUE = 6;
    /**
     * <code>LOSS_HUBER = 7;</code>
     */
    public static final int LOSS_HUBER_VALUE = 7;
    /**
     * <code>LOSS_EPSILON_INSENSITIVE = 8;</code>
     */
    public static final int LOSS_EPSILON_INSENSITIVE_VALUE = 8;
    /**
     * <code>LOSS_SQUARED_EPSILON_INSENSITIVE = 9;</code>
     */
    public static final int LOSS_SQUARED_EPSILON_INSENSITIVE_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Loss valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Loss forNumber(int value) {
      switch (value) {
        case 0: return LOSS_HINGE;
        case 1: return LOSS_LOG_LOSS;
        case 2: return LOSS_LOG;
        case 3: return LOSS_MODIFIED_HUBER;
        case 4: return LOSS_SQUARED_HINGE;
        case 5: return LOSS_PERCEPTRON;
        case 6: return LOSS_SQUARED_ERROR;
        case 7: return LOSS_HUBER;
        case 8: return LOSS_EPSILON_INSENSITIVE;
        case 9: return LOSS_SQUARED_EPSILON_INSENSITIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Loss>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Loss> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Loss>() {
            public Loss findValueByNumber(int number) {
              return Loss.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(1);
    }

    private static final Loss[] VALUES = values();

    public static Loss valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Loss(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Loss)
  }

  /**
   * <pre>
   * Multi_Class kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Multi_Class}
   */
  public enum Multi_Class
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MULTI_CLASS_OVR = 0;</code>
     */
    MULTI_CLASS_OVR(0),
    /**
     * <code>MULTI_CLASS_CRAMMER_SINGER = 1;</code>
     */
    MULTI_CLASS_CRAMMER_SINGER(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MULTI_CLASS_OVR = 0;</code>
     */
    public static final int MULTI_CLASS_OVR_VALUE = 0;
    /**
     * <code>MULTI_CLASS_CRAMMER_SINGER = 1;</code>
     */
    public static final int MULTI_CLASS_CRAMMER_SINGER_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Multi_Class valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Multi_Class forNumber(int value) {
      switch (value) {
        case 0: return MULTI_CLASS_OVR;
        case 1: return MULTI_CLASS_CRAMMER_SINGER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Multi_Class>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Multi_Class> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Multi_Class>() {
            public Multi_Class findValueByNumber(int number) {
              return Multi_Class.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(2);
    }

    private static final Multi_Class[] VALUES = values();

    public static Multi_Class valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Multi_Class(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Multi_Class)
  }

  /**
   * <pre>
   * Order kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Order}
   */
  public enum Order
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORDER_C = 0;</code>
     */
    ORDER_C(0),
    /**
     * <code>ORDER_F = 1;</code>
     */
    ORDER_F(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORDER_C = 0;</code>
     */
    public static final int ORDER_C_VALUE = 0;
    /**
     * <code>ORDER_F = 1;</code>
     */
    public static final int ORDER_F_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Order valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Order forNumber(int value) {
      switch (value) {
        case 0: return ORDER_C;
        case 1: return ORDER_F;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Order>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Order> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Order>() {
            public Order findValueByNumber(int number) {
              return Order.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(3);
    }

    private static final Order[] VALUES = values();

    public static Order valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Order(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Order)
  }

  /**
   * <pre>
   *Solver kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Solver}
   */
  public enum Solver
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SOLVER_AUTO = 0;</code>
     */
    SOLVER_AUTO(0),
    /**
     * <code>SOLVER_SVD = 1;</code>
     */
    SOLVER_SVD(1),
    /**
     * <code>SOLVER_CHOLESKY = 2;</code>
     */
    SOLVER_CHOLESKY(2),
    /**
     * <code>SOLVER_LSQR = 3;</code>
     */
    SOLVER_LSQR(3),
    /**
     * <code>SOLVER_SPARSE_CG = 4;</code>
     */
    SOLVER_SPARSE_CG(4),
    /**
     * <code>SOLVER_SAG = 5;</code>
     */
    SOLVER_SAG(5),
    /**
     * <code>SOLVER_SAGA = 6;</code>
     */
    SOLVER_SAGA(6),
    /**
     * <code>SOLVER_LBFGS = 7;</code>
     */
    SOLVER_LBFGS(7),
    /**
     * <code>SOLVER_NEWTON_CHOLESKY = 8;</code>
     */
    SOLVER_NEWTON_CHOLESKY(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SOLVER_AUTO = 0;</code>
     */
    public static final int SOLVER_AUTO_VALUE = 0;
    /**
     * <code>SOLVER_SVD = 1;</code>
     */
    public static final int SOLVER_SVD_VALUE = 1;
    /**
     * <code>SOLVER_CHOLESKY = 2;</code>
     */
    public static final int SOLVER_CHOLESKY_VALUE = 2;
    /**
     * <code>SOLVER_LSQR = 3;</code>
     */
    public static final int SOLVER_LSQR_VALUE = 3;
    /**
     * <code>SOLVER_SPARSE_CG = 4;</code>
     */
    public static final int SOLVER_SPARSE_CG_VALUE = 4;
    /**
     * <code>SOLVER_SAG = 5;</code>
     */
    public static final int SOLVER_SAG_VALUE = 5;
    /**
     * <code>SOLVER_SAGA = 6;</code>
     */
    public static final int SOLVER_SAGA_VALUE = 6;
    /**
     * <code>SOLVER_LBFGS = 7;</code>
     */
    public static final int SOLVER_LBFGS_VALUE = 7;
    /**
     * <code>SOLVER_NEWTON_CHOLESKY = 8;</code>
     */
    public static final int SOLVER_NEWTON_CHOLESKY_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Solver valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Solver forNumber(int value) {
      switch (value) {
        case 0: return SOLVER_AUTO;
        case 1: return SOLVER_SVD;
        case 2: return SOLVER_CHOLESKY;
        case 3: return SOLVER_LSQR;
        case 4: return SOLVER_SPARSE_CG;
        case 5: return SOLVER_SAG;
        case 6: return SOLVER_SAGA;
        case 7: return SOLVER_LBFGS;
        case 8: return SOLVER_NEWTON_CHOLESKY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Solver>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Solver> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Solver>() {
            public Solver findValueByNumber(int number) {
              return Solver.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(4);
    }

    private static final Solver[] VALUES = values();

    public static Solver valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Solver(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Solver)
  }

  /**
   * <pre>
   * Selection kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Selection}
   */
  public enum Selection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SELECTION_CYCLIC = 0;</code>
     */
    SELECTION_CYCLIC(0),
    /**
     * <code>SELECTION_RANDOM = 1;</code>
     */
    SELECTION_RANDOM(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SELECTION_CYCLIC = 0;</code>
     */
    public static final int SELECTION_CYCLIC_VALUE = 0;
    /**
     * <code>SELECTION_RANDOM = 1;</code>
     */
    public static final int SELECTION_RANDOM_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Selection valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Selection forNumber(int value) {
      switch (value) {
        case 0: return SELECTION_CYCLIC;
        case 1: return SELECTION_RANDOM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Selection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Selection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Selection>() {
            public Selection findValueByNumber(int number) {
              return Selection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(5);
    }

    private static final Selection[] VALUES = values();

    public static Selection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Selection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Selection)
  }

  /**
   * <pre>
   * Algorithm kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Algorithm}
   */
  public enum Algorithm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALGORITHM_AUTO = 0;</code>
     */
    ALGORITHM_AUTO(0),
    /**
     * <code>ALGORITHM_BALL_TREE = 1;</code>
     */
    ALGORITHM_BALL_TREE(1),
    /**
     * <code>ALGORITHM_KD_TREE = 2;</code>
     */
    ALGORITHM_KD_TREE(2),
    /**
     * <code>ALGORITHM_BRUTE = 3;</code>
     */
    ALGORITHM_BRUTE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ALGORITHM_AUTO = 0;</code>
     */
    public static final int ALGORITHM_AUTO_VALUE = 0;
    /**
     * <code>ALGORITHM_BALL_TREE = 1;</code>
     */
    public static final int ALGORITHM_BALL_TREE_VALUE = 1;
    /**
     * <code>ALGORITHM_KD_TREE = 2;</code>
     */
    public static final int ALGORITHM_KD_TREE_VALUE = 2;
    /**
     * <code>ALGORITHM_BRUTE = 3;</code>
     */
    public static final int ALGORITHM_BRUTE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Algorithm valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Algorithm forNumber(int value) {
      switch (value) {
        case 0: return ALGORITHM_AUTO;
        case 1: return ALGORITHM_BALL_TREE;
        case 2: return ALGORITHM_KD_TREE;
        case 3: return ALGORITHM_BRUTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Algorithm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Algorithm> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Algorithm>() {
            public Algorithm findValueByNumber(int number) {
              return Algorithm.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(6);
    }

    private static final Algorithm[] VALUES = values();

    public static Algorithm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Algorithm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Algorithm)
  }

  /**
   * <pre>
   * Link kwargs with enum type.
   * </pre>
   *
   * Protobuf enum {@code AIProto.Link}
   */
  public enum Link
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LINK_AUTO = 0;</code>
     */
    LINK_AUTO(0),
    /**
     * <code>LINK_LOG = 1;</code>
     */
    LINK_LOG(1),
    /**
     * <code>LINK_IDENTITY = 2;</code>
     */
    LINK_IDENTITY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LINK_AUTO = 0;</code>
     */
    public static final int LINK_AUTO_VALUE = 0;
    /**
     * <code>LINK_LOG = 1;</code>
     */
    public static final int LINK_LOG_VALUE = 1;
    /**
     * <code>LINK_IDENTITY = 2;</code>
     */
    public static final int LINK_IDENTITY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Link valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Link forNumber(int value) {
      switch (value) {
        case 0: return LINK_AUTO;
        case 1: return LINK_LOG;
        case 2: return LINK_IDENTITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Link>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Link> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Link>() {
            public Link findValueByNumber(int number) {
              return Link.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return AIProto.EnumExpression.getDescriptor().getEnumTypes().get(7);
    }

    private static final Link[] VALUES = values();

    public static Link valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Link(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AIProto.Link)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031lib/enum_expression.proto\022\007AIProto*A\n\007" +
      "Penalty\022\016\n\nPENALTY_L2\020\000\022\016\n\nPENALTY_L1\020\001\022" +
      "\026\n\022PENALTY_ELASTICNET\020\002*\351\001\n\004Loss\022\016\n\nLOSS" +
      "_HINGE\020\000\022\021\n\rLOSS_LOG_LOSS\020\001\022\014\n\010LOSS_LOG\020" +
      "\002\022\027\n\023LOSS_MODIFIED_HUBER\020\003\022\026\n\022LOSS_SQUAR" +
      "ED_HINGE\020\004\022\023\n\017LOSS_PERCEPTRON\020\005\022\026\n\022LOSS_" +
      "SQUARED_ERROR\020\006\022\016\n\nLOSS_HUBER\020\007\022\034\n\030LOSS_" +
      "EPSILON_INSENSITIVE\020\010\022$\n LOSS_SQUARED_EP" +
      "SILON_INSENSITIVE\020\t*B\n\013Multi_Class\022\023\n\017MU" +
      "LTI_CLASS_OVR\020\000\022\036\n\032MULTI_CLASS_CRAMMER_S" +
      "INGER\020\001*!\n\005Order\022\013\n\007ORDER_C\020\000\022\013\n\007ORDER_F" +
      "\020\001*\264\001\n\006Solver\022\017\n\013SOLVER_AUTO\020\000\022\016\n\nSOLVER" +
      "_SVD\020\001\022\023\n\017SOLVER_CHOLESKY\020\002\022\017\n\013SOLVER_LS" +
      "QR\020\003\022\024\n\020SOLVER_SPARSE_CG\020\004\022\016\n\nSOLVER_SAG" +
      "\020\005\022\017\n\013SOLVER_SAGA\020\006\022\020\n\014SOLVER_LBFGS\020\007\022\032\n" +
      "\026SOLVER_NEWTON_CHOLESKY\020\010*7\n\tSelection\022\024" +
      "\n\020SELECTION_CYCLIC\020\000\022\024\n\020SELECTION_RANDOM" +
      "\020\001*d\n\tAlgorithm\022\022\n\016ALGORITHM_AUTO\020\000\022\027\n\023A" +
      "LGORITHM_BALL_TREE\020\001\022\025\n\021ALGORITHM_KD_TRE" +
      "E\020\002\022\023\n\017ALGORITHM_BRUTE\020\003*6\n\004Link\022\r\n\tLINK" +
      "_AUTO\020\000\022\014\n\010LINK_LOG\020\001\022\021\n\rLINK_IDENTITY\020\002" +
      "B\004Z\002./b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
